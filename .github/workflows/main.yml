name: SpringBoot CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run tests
        run: mvn test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Deploy to local environment
        env:
          NGROK_URL: ${{ secrets.NGROK_URL }}
        run: |
          # Check if container exists and remove it
          if docker ps -a | grep -q springboot-app; then
            docker stop springboot-app
            docker rm springboot-app
          fi
          
          # Pull and run the latest image
          docker pull ghcr.io/${{ github.repository }}:latest
          docker run -d \
            --name springboot-app \
            -p 8086:8086 \
            -e NGROK_URL=${{ secrets.NGROK_URL }} \
            ghcr.io/${{ github.repository }}:latest
          
          # Verify container is running
          docker ps | grep springboot-app